{"version":3,"sources":["components/layout/SignInedLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebase.js","index.js"],"names":["connect","dispatch","signOut","getState","a","getFirebase","firebase","auth","type","err","props","profile","className","to","onClick","initials","SignedOutLinks","state","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","format","ProjectSummary","project","title","authorFirstName","createdAt","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","ownProps","match","params","data","authorLastName","authError","signIn","credentials","signInWithEmailAndPassword","email","password","useState","info","setInfo","handleOnchange","e","target","value","onSubmit","preventDefault","htmlFor","onChange","signUp","newUser","getFirestore","createUserWithEmailAndPassword","respon","doc","set","firstName","lastName","createProject","console","log","authorId","add","Date","setProject","history","push","component","rest","render","restricted","App","exact","path","ProjectDetail","SignIn","SignUp","CreateProject","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","composeEnhancers","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","createFirestoreInstance","ReactDOM","useSelector","isLoaded","children","document","getElementById"],"mappings":"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","file":"static/js/main.1155edbc.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    const { signOut, profile } = props;\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><NavLink to=\"/signin\" onClick={signOut}>Log Out</NavLink></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\n        </ul>\n            \n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","\nexport const signIn = (credentials) => {\n    return async (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        try {\n            await firebase.auth().signInWithEmailAndPassword(\n                credentials.email,\n                credentials.password\n            )\n            return dispatch({type: 'LOGIN_SUCCESS'})\n        } catch(err) {\n            return dispatch({type: \"LOGIN_FAILED\", err})\n        }\n    }\n}\n\nexport const signOut = () => {\n    return async (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n        try {\n            await firebase.auth().signOut();\n            return dispatch({type: \"SIGNOUT_SUCCESS\"})\n        } catch(err) {\n            return dispatch({type: \"SIGNOUT_FAILED\", err})\n        }\n    }\n}\n\nexport const signUp = (newUser) => {\n    return async(dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        try {\n            //create user in firebase\n            const respon = await firebase.auth().createUserWithEmailAndPassword(\n                newUser.email,\n                newUser.password\n            )\n            //get the uid and save other info to firestore\n            await firestore.collection('users').doc(respon.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n            return dispatch({type: \"SIGNUP_SUCCESS\"})\n        } catch(err) {\n            return dispatch({type: \"SIGNUP_FAILED\", err})\n        }\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log in</NavLink></li>\n        </ul>\n            \n    )\n}\n\nexport default SignedOutLinks\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignInedLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    return (\n        <nav className=\"nav-wrapper grey light-1\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">ProjectCreater</Link>\n                {\n                    auth.uid?\n                    <SignedInLinks profile={profile}/>:\n                    <SignedOutLinks />\n                }\n            </div>\n        </nav>\n        \n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notification = ({notifications}) => {\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notification</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-data\">\n                                        {moment(item.time.toDate()).format('lll')}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).format('lll')}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n    return(\n        <div className=\"project-list section\">\n            {\n                projects && projects.map(project => {\n                    return (\n                        <Link to={`/project/` + project.id } key={project.id}><ProjectSummary project={project} /></Link>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notification from './Notification';\nimport ProjectList from '../project/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\n\nclass Dashboard extends Component {\n    \n    render() {\n        const { projects, notifications } = this.props;\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notification notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'notifications', orderBy: ['time', 'desc']},\n        { collection: 'projects', orderBy: ['createdAt', 'desc']}\n    ])\n)(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport moment from 'moment';\n\nconst ProjectDetail = (props) => {\n    const { project } = props;\n    return (\n        project? \n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                        <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).format('lll')}</div>\n                        </div>\n                    </div>\n            </div>\n        </div>\n        : \n        <div className=\"container center\">\n            <p>Loading project...</p>\n        </div>\n    )\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { projects } = state.firestore.data;    \n    const project = projects\n                    ? projects[id]\n                    : null\n    return {\n        project: project\n    }\n    \n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{\n        collection: 'projects'\n    }])\n)(ProjectDetail);","import React ,{ useState } from 'react';\nimport { signIn } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nconst SignIn = (props) => {\n    const [info, setInfo] = useState({\n        email: '',\n        password: ''\n    })\n    const { authError } = props\n\n    const handleOnchange = (e) => {\n        setInfo({\n            ...info,\n            [e.target.id]: e.target.value\n        })\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.signIn(info)\n    }\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Log In</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={handleOnchange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={handleOnchange} />\n                </div>\n                <div className=\"input-field\">\n                    <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    <div className=\"red-text center\">\n                        {\n                            authError?\n                            <p>{authError}</p>\n                            : null\n                        }\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (credentials) => dispatch(signIn(credentials))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React ,{ useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nconst SignUp = (props) => {\n    const [info, setInfo] = useState({\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    })\n\n    const handleOnchange = (e) => {\n        setInfo({\n            ...info,\n            [e.target.id]: e.target.value\n        })\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.signUp(info)\n    }\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={handleOnchange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={handleOnchange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" id=\"firstName\" onChange={handleOnchange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={handleOnchange} />\n                </div>\n                <div className=\"input-field\">\n                    <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Signup</button>\n                    <div className=\"red-text center\">\n                        {\n                            props.authError?\n                            <p>{props.authError}</p>\n                            : null\n                        }\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React ,{ useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\n\nconst CreateProject = (props) => { \n    const [project, setProject] = useState({\n        title: '',\n        content: '',\n    })\n\n    const handleOnchange = (e) => {\n        setProject({\n            ...project,\n            [e.target.id]: e.target.value\n        })\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.createProject(project)\n        props.history.push('/')\n    }\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" id=\"title\" onChange={handleOnchange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Project Content</label>\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={handleOnchange}></textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                </div>\n                <h2>{project.authorFirstName}</h2>\n                <h2>{project.authorLastName}</h2>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project)) \n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CreateProject);","\nexport const createProject = (project) => {\n    return async(dispatch, getState, {getFirebase, getFirestore}) => {\n        console.log('middleware:', project)\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        try {\n            await firestore.collection('projects').add({\n                ...project,\n                authorFirstName: profile.firstName,\n                authorLastName: profile.lastName,\n                authorId: authorId,\n                createdAt: new Date()\n            })\n            return dispatch({type: 'CREATE_PROJECT', project})\n        } catch(err) {\n            return dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        }\n    }\n}\n\n","import React from 'react';\nimport { Route, Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest}) => {\n    return (\n        <Route \n            {...rest}\n            render={ props => {\n                return auth.uid? <Component {...props} /> : <Redirect to='/signin'/>\n            }}\n        />\n    )\n}\n\nconst mapStateToProps = state => {\n   return {\n       auth: state.firebase.auth\n    } \n}\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PublicRoute = ({ component: Component, restricted, auth,...rest}) => { \n    return (\n        <Route \n            {...rest}\n            render={(props) => {\n                return auth.uid && restricted ? <Redirect to=\"/\" /> : <Component {...props}/>\n            }}\n        />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetail from './components/project/ProjectDetail';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\n          <PrivateRoute path='/project/:id' component={ProjectDetail}/>\n          <PublicRoute restricted path='/signin' component={SignIn} />\n          <PublicRoute restricted path='/signup' component={SignUp} />\n          <PrivateRoute path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case \"LOGIN_SUCCESS\": \n            console.log('user signed in')\n            return {\n                ...state,\n                authError: null\n            }\n        case \"LOGIN_FAILED\":\n            console.log(action.err)\n            return {\n                ...state,\n                authError: `login failed... ${action.err}`\n            }\n        case \"SIGNOUT_SUCCESS\":\n            console.log('logout success!')\n            return state\n        case \"SIGNUP_SUCCESS\":\n            console.log('from authReducer: ',action.respon)\n            return state\n        case \"SIGNUP_FAILED\":\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","const initState = {\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type) {\n        case \"CREATE_PROJECT\":\n            console.log(\"From projectReducer: \",action.project);\n            return state;\n        case \"CREATE_PROJECT_ERROR\":\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nexport const firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    databaseURL: process.env.REACT_APP_databaseURL,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId\n  };\n  \nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport { reduxFirestore, createFirestoreInstance, getFirestore} from 'redux-firestore';\nimport firebase, { firebaseConfig } from './config/firebase';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    : compose\n\nconst store = createStore(rootReducer ,\n    composeEnhancers(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})),\n        reduxFirestore(firebase, firebaseConfig),\n    )\n);\n\nconst rrfProps = {\n    firebase,\n    config: firebaseConfig,\n    config: {\n        useFirestoreForProfile: true,\n        userProfile: 'users'\n    },\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n  };\n\nconst AuthIsLoaded = (props) => {\n    const auth = useSelector(state => state.firebase.auth);\n    if(!isLoaded(auth)) {\n        return <div>Loading Screen...</div>\n    } \n    return props.children   \n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded>\n                <App />\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>, \n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}